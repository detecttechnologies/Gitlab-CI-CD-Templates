# -----------------------------------------------
# GitLab CI job for building Docker images
# Uses Docker BuildX for multi-platform support
# Runs on tags and merge requests when Dockerfile exists
# Images are tagged with:
#  - git `version` , and `latest` tag, whenever a commit is tagged
#  - "merge" when triggered by merge requests
# -----------------------------------------------

# Job to set pipeline variables that will be available to all subsequent jobs
set-build-vars:
  stage: build
  image: alpine
  before_script:
    - apk add bash git curl
  script:
    - bash -c "$(curl -fsSL https://github.com/detecttechnologies/Gitlab-CI-CD-Templates/raw/develop/build/docker/set_build_vars.sh)"
  artifacts:
    reports:
      dotenv: build_variables.env
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        VERSION: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        VERSION: "merge"
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        VERSION: "production"
    - if: $CI_COMMIT_BRANCH == "develop"
      variables:
        VERSION: "dev"
    - when: never

build:
  stage: build
  needs: [set-build-vars]
  image: docker:23
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  tags:
    - amd64
  before_script:
    - apk add bash git curl
    - docker login registry.gitlab.com -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    - docker buildx version || true
    - docker buildx create --name mybuilder --driver docker-container --use
    - docker buildx inspect --bootstrap
  script:
    - bash -c "$(curl -fsSL https://github.com/detecttechnologies/Gitlab-CI-CD-Templates/raw/develop/build/docker/build_image.sh)"
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        VERSION: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        VERSION: "merge"
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        VERSION: "latest"
    - if: $CI_COMMIT_BRANCH == "develop"
      variables:
        VERSION: "dev"
    - when: never