# Include Gitlab template Jobs
include:
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Jobs/Container-Scanning.gitlab-ci.yml

# Create docker:dind service to run docker commands
services:
  - name: docker:dind

# Define pipeline stages
stages:
  - build
  - test
  - deploy


# Pipeline trigger from master repo scenario
# creates a docker image with TAG and saves in container registry of repo 

# docker build job
build_docker:
  stage: build
  image: docker:20
  before_script:
    - apk add --no-cache curl bash git 
  script:
    - bash -c "$(curl -fsSL https://github.com/detecttechnologies.com/Gitlab-CI-CD-Templates/raw/dashboard-ci/tpulse/scripts/build_docker.sh)"
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_COMMIT_BRANCH == "develop"
      variables:
        DEPLOY_ENVIRONMENT: dev
    - if: $CI_COMMIT_BRANCH == "test"
      variables:
        DEPLOY_ENVIRONMENT: qa
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        DEPLOY_ENVIRONMENT: staging
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - when: never   

# Base container scannig configuration 
container_scanning:
  variables:
    TAG: merge_requests
    GIT_STRATEGY: fetch
    CS_IMAGE: $CI_REGISTRY_IMAGE:$TAG
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    
# black job in test stage
black:
  stage: test
  image: detecttechnologies/python-code-quality:latest
  script:
    - black --diff --color --line-length 119 . || true
    - black --check --line-length 119 . || true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# pylama job in test stage
pylama:
  stage: test
  image: detecttechnologies/python-code-quality:latest
  script:
    - pylama . || true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Template test jobs to only run on merge requests
code_quality:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

secret_detection:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

semgrep-sast:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"



# Docker Deploy Jobs
# Pipeline trigger from master repo scenario
# base job to inherit from
# pulls docker image from container registry, pushes to ECR, and update service on ECS

deploy_docker:
  stage: deploy
  image: docker:20
  environment:
    name: $ENVIRONMENT
  before_script:
    - apk update
    - apk add --no-cache curl bash git &>/dev/null
    - apk add --no-cache python3 py3-pip &>/dev/null
    - pip3 install --no-cache-dir awscli toml boto3 jq &>/dev/null
  script:
    - bash -c "$(curl -fsSL https://github.com/detecttechnologies.com/Gitlab-CI-CD-Templates/raw/dashboard-ci/tpulse/scripts/deploy_docker.sh)"
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_COMMIT_BRANCH == "develop"
      variables:
        DEPLOY_ENVIRONMENT: dev
        ENVIRONMENT: dev
        DEPLOY_CONFIG: $dev_DEPLOYMENT_CONFIG
    - if: $CI_COMMIT_BRANCH == "test"
      variables:
        DEPLOY_ENVIRONMENT: qa
        ENVIRONMENT: qa
        DEPLOY_CONFIG: $qa_DEPLOYMENT_CONFIG
      when: manual
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        DEPLOY_ENVIRONMENT: staging
        ENVIRONMENT: staging
        DEPLOY_CONFIG: $staging_DEPLOYMENT_CONFIG
      when: manual
    - when: never
